<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".c" #>
<#@ import namespace="System.Collections.Generic" #>

<#
    // Read session model if provided
    dynamic model = (Session != null && Session.ContainsKey("config")) ? Session["config"] : null;

    // Resolve device name
    string deviceName = "PIC32MZ1024EFH144";
    try { if (model != null && model.Device != null) deviceName = (string)model.Device; } catch { }

    // Resolve device dictionary:
    // 1) Prefer model.Config
    // 2) Otherwise, look for a property named after the device (legacy shape)
    IDictionary<string, string>? device = null;
    try { if (model != null && model.Config != null) device = (IDictionary<string, string>)model.Config; } catch { }
    if (device == null && model != null)
    {
        try
        {
            var devProp = ((object)model).GetType().GetProperty(deviceName);
            var devObj = devProp?.GetValue(model);
            device = devObj as IDictionary<string, string>;
        }
        catch { }
    }

    // Hardcoded defaults
    var defaults = new Dictionary<string, string>
    {
        ["INCLUDE_HEADER"] = "initialization.h",
        ["DEBUG"] = "OFF",
        ["JTAGEN"] = "OFF",
        ["ICESEL"] = "ICS_PGx1",
        ["TRCEN"] = "OFF",
        ["BOOTISA"] = "MIPS32",
        ["FECCCON"] = "OFF_UNLOCKED",
        ["FSLEEP"] = "OFF",
        ["DBGPER"] = "PG_ALL",
        ["SMCLR"] = "MCLR_NORM",
        ["SOSCGAIN"] = "GAIN_LEVEL_3",
        ["SOSCBOOST"] = "ON",
        ["POSCGAIN"] = "GAIN_LEVEL_3",
        ["POSCBOOST"] = "ON",
        ["EJTAGBEN"] = "NORMAL",
        ["CP"] = "OFF",
        ["FNOSC"] = "SPLL",
        ["DMTINTV"] = "WIN_127_128",
        ["FSOSCEN"] = "OFF",
        ["IESO"] = "OFF",
        ["POSCMOD"] = "EC",
        ["OSCIOFNC"] = "OFF",
        ["FCKSM"] = "CSECME",
        ["WDTPS"] = "PS1048576",
        ["WDTSPGM"] = "STOP",
        ["FWDTEN"] = "OFF",
        ["WINDIS"] = "NORMAL",
        ["FWDTWINSZ"] = "WINSZ_25",
        ["DMTCNT"] = "DMT31",
        ["FDMTEN"] = "OFF",
        ["FPLLIDIV"] = "DIV_3",
        ["FPLLRNG"] = "RANGE_5_10_MHZ",
        ["FPLLICLK"] = "PLL_POSC",
        ["FPLLMULT"] = "MUL_50",
        ["FPLLODIV"] = "DIV_2",
        ["UPLLFSEL"] = "FREQ_24MHZ",
        ["USERID"] = "0xffff",
        ["FMIIEN"] = "ON",
        ["FETHIO"] = "ON",
        ["PGL1WAY"] = "ON",
        ["PMDL1WAY"] = "ON",
        ["IOL1WAY"] = "ON",
        ["FUSBIDIO"] = "ON",
        ["TSEQ"] = "0xffff",
        ["CSEQ"] = "0x0",
        ["PREFEN"] = "3",
        ["PFMWS"] = "3",
        ["ECCCON"] = "3"
    };

    string Val(string key)
    {
        if (device != null && device.TryGetValue(key, out var v) && !string.IsNullOrEmpty(v))
            return v;
        return defaults.TryGetValue(key, out var d) ? d : "";
    }

    var header = Val("INCLUDE_HEADER");
    var headerLiteral = (!string.IsNullOrEmpty(header) && header.StartsWith("\"")) ? header : "\"" + header + "\"";
#>
Device: <#= deviceName #>

// *****************************************************************************
// *****************************************************************************
// Section: Included Files
// *****************************************************************************
// *****************************************************************************
#include <#= headerLiteral #>

// ****************************************************************************
// ****************************************************************************
// Section: Configuration Bits
// ****************************************************************************
// ****************************************************************************

/*** DEVCFG0 ***/
#pragma config DEBUG =      <#= Val("DEBUG") #>
#pragma config JTAGEN =     <#= Val("JTAGEN") #>
#pragma config ICESEL =     <#= Val("ICESEL") #>
#pragma config TRCEN =      <#= Val("TRCEN") #>
#pragma config BOOTISA =    <#= Val("BOOTISA") #>
#pragma config FECCCON =    <#= Val("FECCCON") #>
#pragma config FSLEEP =     <#= Val("FSLEEP") #>
#pragma config DBGPER =     <#= Val("DBGPER") #>
#pragma config SMCLR =      <#= Val("SMCLR") #>
#pragma config SOSCGAIN =   <#= Val("SOSCGAIN") #>
#pragma config SOSCBOOST =  <#= Val("SOSCBOOST") #>
#pragma config POSCGAIN =   <#= Val("POSCGAIN") #>
#pragma config POSCBOOST =  <#= Val("POSCBOOST") #>
#pragma config EJTAGBEN =   <#= Val("EJTAGBEN") #>
#pragma config CP =         <#= Val("CP") #>

/*** DEVCFG1 ***/
#pragma config FNOSC =      <#= Val("FNOSC") #>
#pragma config DMTINTV =    <#= Val("DMTINTV") #>
#pragma config FSOSCEN =    <#= Val("FSOSCEN") #>
#pragma config IESO =       <#= Val("IESO") #>
#pragma config POSCMOD =    <#= Val("POSCMOD") #>
#pragma config OSCIOFNC =   <#= Val("OSCIOFNC") #>
#pragma config FCKSM =      <#= Val("FCKSM") #>
#pragma config WDTPS =      <#= Val("WDTPS") #>
#pragma config WDTSPGM =    <#= Val("WDTSPGM") #>
#pragma config FWDTEN =     <#= Val("FWDTEN") #>
#pragma config WINDIS =     <#= Val("WINDIS") #>
#pragma config FWDTWINSZ =  <#= Val("FWDTWINSZ") #>
#pragma config DMTCNT =     <#= Val("DMTCNT") #>
#pragma config FDMTEN =     <#= Val("FDMTEN") #>

/*** DEVCFG2 ***/
#pragma config FPLLIDIV =   <#= Val("FPLLIDIV") #>
#pragma config FPLLRNG =    <#= Val("FPLLRNG") #>
#pragma config FPLLICLK =   <#= Val("FPLLICLK") #>
#pragma config FPLLMULT =   <#= Val("FPLLMULT") #>
#pragma config FPLLODIV =   <#= Val("FPLLODIV") #>
#pragma config UPLLFSEL =   <#= Val("UPLLFSEL") #>

/*** DEVCFG3 ***/
#pragma config USERID =     <#= Val("USERID") #>
#pragma config FMIIEN =     <#= Val("FMIIEN") #>
#pragma config FETHIO =     <#= Val("FETHIO") #>
#pragma config PGL1WAY =    <#= Val("PGL1WAY") #>
#pragma config PMDL1WAY =   <#= Val("PMDL1WAY") #>
#pragma config IOL1WAY =    <#= Val("IOL1WAY") #>
#pragma config FUSBIDIO =   <#= Val("FUSBIDIO") #>

/*** BF1SEQ0 ***/
#pragma config TSEQ =       <#= Val("TSEQ") #>
#pragma config CSEQ =       <#= Val("CSEQ") #>

// *****************************************************************************
// *****************************************************************************
// Section: System Initialization
// *****************************************************************************
// *****************************************************************************
/*******************************************************************************
  Function:
    void SYS_Initialize ( void *data )

  Summary:
    Initializes the board, services, drivers, application and other modules.

  Remarks:
 */
void SYS_Initialize ( void* data )
{
    (void)__builtin_disable_interrupts();

    CLK_Initialize();
    PRECONbits.PREFEN = <#= Val("PREFEN") #>;
    PRECONbits.PFMWS = <#= Val("PFMWS") #>;
    CFGCONbits.ECCCON = <#= Val("ECCCON") #>;

    // Add your initialization calls here
    // GPIO_Initialize();
    // CORETIMER_Initialize();
    // TMR2_Initialize();
    // OCMP4_Initialize();
    // EVIC_Initialize();

    (void)__builtin_enable_interrupts();
}